/*
 *
 * Nano RISC-V 32i emulator
 * Copyright (C) Dmitry 'MatrixS_Master' Solovyev, 2020-2021
 *
 * This work is licensed under the MIT License. See included LICENSE file
 *
 * */

#ifndef RISCV_TABS_H_
#define RISCV_TABS_H_

// This is probably not the best way to represent the RISC-V command encoding,
// but it's very simple and human readable.
static const char* riscv_encode[] = {
//  "12345678123456781234567812345678",
    "[ZYXWVUTSRQPONMLKJIH     0110111",
    "[ZYXWVUTSRQPONMLKJIH     0010111",
    "PFEDCBA@?>=GONMLKJIH     1101111",
    "GFEDCBA@?>=<     000     1100111",
    "HFEDCBA          000@?>=G1100011",
    "HFEDCBA          001@?>=G1100011",
    "HFEDCBA          100@?>=G1100011",
    "HFEDCBA          101@?>=G1100011",
    "HFEDCBA          110@?>=G1100011",
    "HFEDCBA          111@?>=G1100011",
    "GFEDCBA@?>=<     000     0000011",
    "GFEDCBA@?>=<     001     0000011",
    "GFEDCBA@?>=<     010     0000011",
    "GFEDCBA@?>=<     100     0000011",
    "GFEDCBA@?>=<     101     0000011",
    "GFEDCBA          000@?>=<0100011",
    "GFEDCBA          001@?>=<0100011",
    "GFEDCBA          010@?>=<0100011",
    "GFEDCBA@?>=<     000     0010011",
    "GFEDCBA@?>=<     010     0010011",
    "GFEDCBA@?>=<     011     0010011",
    "GFEDCBA@?>=<     100     0010011",
    "GFEDCBA@?>=<     110     0010011",
    "GFEDCBA@?>=<     111     0010011",
    "0000000          001     0010011",
    "0000000          101     0010011",
    "0100000          101     0010011",
    "0000000          000     0110011",
    "0100000          000     0110011",
    "0000000          001     0110011",
    "0000000          010     0110011",
    "0000000          011     0110011",
    "0000000          100     0110011",
    "0000000          101     0110011",
    "0100000          101     0110011",
    "0000000          110     0110011",
    "0000000          111     0110011",
    "                 000     0001111",
    "00000000000000000000000001110011",
    "00000000000100000000000001110011"
};

// The reason why I made these tabs separate instead of combining them into one structure,
// is it's now possible to simply remove them if you don't need a particular information
// (e.g., if you don't need trace or disassembly, you probably don't need one or more of
// these tabs below)
#ifdef RV_USE_DISASM
static const char* riscv_names[] = {
    "LUI",
    "AUIPC",
    "JAL",
    "JALR",
    "BEQ",
    "BNE",
    "BLT",
    "BGE",
    "BLTU",
    "BGEU",
    "LB",
    "LH",
    "LW",
    "LBU",
    "LHU",
    "SB",
    "SH",
    "SW",
    "ADDI",
    "SLTI",
    "SLTIU",
    "XORI",
    "ORI",
    "ANDI",
    "SLLI",
    "SRLI",
    "SRAI",
    "ADD",
    "SUB",
    "SLL",
    "SLT",
    "SLTU",
    "XOR",
    "SRL",
    "SRA",
    "OR",
    "AND",
    "FENCE",
    "ECALL",
    "EBREAK"
};

static const char* riscv_useregs[] = {
    "100",
    "100",
    "100",
    "110",
    "011",
    "011",
    "011",
    "011",
    "011",
    "011",
    "110",
    "110",
    "110",
    "110",
    "110",
    "011",
    "011",
    "011",
    "110",
    "110",
    "110",
    "110",
    "110",
    "110",
    "110",
    "110",
    "110",
    "111",
    "111",
    "111",
    "111",
    "111",
    "111",
    "111",
    "111",
    "111",
    "111",
    "110",
    "000",
    "000"
};

static const char* riscv_regname[32] = {
    "zero",
    "ra",
    "sp",
    "gp",
    "tp",
    "t0",
    "t1",
    "t2",
    "s0/fp",
    "s1",
    "a0",
    "a1",
    "a2",
    "a3",
    "a4",
    "a5",
    "a6",
    "a7",
    "s2",
    "s3",
    "s4",
    "s5",
    "s6",
    "s7",
    "s8",
    "s9",
    "s10",
    "s11",
    "t3",
    "t4",
    "t5",
    "t6"
};
#endif /* RV_USE_DISASM */

#endif /* RISCV_TABS_H_ */
